worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
	server_tokens off;
	
    server {
        listen 80;
        server_name localhost;

        # No redirect to HTTPS for local development
        # return 301 https://$host$request_uri;

        location / {
            proxy_pass http://frontend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		location /images/ {
			alias /usr/share/nginx/html/public/images/;
			expires 30d;
			add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		}
		
        location /api {
            proxy_pass http://backend:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
			
			# CORS headers

            add_header 'Access-Control-Allow-Origin' 'http://localhost:8080' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
    
			# Handle preflight requests
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' 'http://localhost:8080' always;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
				add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }
        }

        location /health {
            proxy_pass http://frontend:3001/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
		
		error_page 404 /404.html;
		error_page 500 502 503 504 /50x.html;

		location = /50x.html {
			root /usr/share/nginx/html;
		}
    }
}